name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

jobs:
  check:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        java-version:
          - 11
          - 17
        jdk-dist:
          - adopt-hotspot
          - temurin
          - corretto
    runs-on: ${{ matrix.os }}
    name: Run tests via ${{ matrix.jdk-dist }} JDK v${{ matrix.java-version }}, on ${{ matrix.os }}
    steps:
      - name: Set ${{ matrix.jdk-dist }} JDK v${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.jdk-dist }}
          java-version: ${{ matrix.java-version }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run tests
        run: sbt test

  configure-sbt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: create SBT configuration
        run: |
          mkdir -p $HOME/.sbt/1.0/
          echo 'credentials += Credentials("Sonatype Nexus Repository Manager",' >> $HOME/.sbt/1.0/sonatype.sbt
          echo '"oss.sonatype.org",' >> $HOME/.sbt/1.0/sonatype.sbt
          echo '"${{ secrets.MAVEN_CENTRAL_USERNAME }}",' >> $HOME/.sbt/1.0/sonatype.sbt
          echo '"${{ secrets.MAVEN_CENTRAL_PASSWORD }}")' >> $HOME/.sbt/1.0/sonatype.sbt

  import-gpg:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.SIGNING_KEY }}
          passphrase: ${{ secrets.SIGNING_PASSWORD }}
      - name: List keys
        run: gpg -K

  test-release:
    name: Test Release
    needs:
      - check
      - import-gpg
      - configure-sbt
    runs-on: ubuntu-latest
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    concurrency:
      group: test-release-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: adopt-hotspot
          server-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          server-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}

      - name: Deploy
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
        run: |
          npm install
          npx semantic-release --dry-run

  release:
    if: github.event_name == 'push'
    needs:
      - check
      - test-release
      - import-gpg
      - configure-sbt
    runs-on: ubuntu-latest
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: adopt
          server-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          server-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
        run: |
          npm install
          npx semantic-release

  success:
    runs-on: ubuntu-latest
    needs:
      - check
      - test-release
      - release
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
