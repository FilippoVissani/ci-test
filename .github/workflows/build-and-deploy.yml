name: Build and deploy
on:
  workflow_call:
  workflow_dispatch:

jobs:
  # Runs all tests
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        java-version:
          - 11
          - 18
        jdk-dist:
          - adopt-hotspot
          - adopt-openj9
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    name: Run tests via ${{ matrix.jdk-dist }} JDK v${{ matrix.java-version }}, on ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set ${{ matrix.jdk-dist }} JDK v${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.jdk-dist }}
          java-version: ${{ matrix.java-version }}
          cache: 'sbt'

      - name: Run tests
        run: sbt test

  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          java-version: '11'
          distribution: 'temurin'
          cache: 'sbt'

      - name: Coverage Report
        run: sbt clean coverage test coverageReport

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Performs a release if needed
  release:
    concurrency:
      # Only one release job at a time per branch, as only main releases.
      # Strictly sequential.
      group: release-${{ github.event.number || github.ref }}
    needs:
      - build
    runs-on: ubuntu-latest
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: Generate Fat Jar
        run: sbt assembly
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm install
          npx semantic-release
  success:
    runs-on: ubuntu-latest
    needs:
      - build
      - code-coverage
      - release
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
