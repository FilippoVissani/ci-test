name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

jobs:
  check:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          #- windows-latest
          #- macos-latest
        java-version:
          - 11
          #- 17
        jdk-dist:
          #- adopt-hotspot
          #- temurin
          - corretto
    runs-on: ${{ matrix.os }}
    name: Run tests via ${{ matrix.jdk-dist }} JDK v${{ matrix.java-version }}, on ${{ matrix.os }}
    steps:
      - name: Set ${{ matrix.jdk-dist }} JDK v${{ matrix.java-version }}
        uses: olafurpg/setup-scala@v14
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.jdk-dist }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run tests
        run: sbt test

  test-release:
    name: Test Release
    needs:
      - check
    runs-on: ubuntu-latest
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    concurrency:
      group: test-release-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Java
        uses: olafurpg/setup-scala@v14
        with:
          java-version: '17'
          distribution: adopt-hotspot
      - name: Sbt check publish artifacts
        run: sbt +publishLocal

  release:
    if: github.event_name == 'push'
    needs:
      - check
      - test-release
    runs-on: ubuntu-latest
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Checkout the repository
        uses: danysk/action-checkout@0.2.9
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Setup Java
        uses: olafurpg/setup-scala@v14
        with:
          java-version: '17'
          distribution: adopt
      - name: Release
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          PGP_PASSPHRASE: ${{ secrets.SIGNING_PASSWORD }}
          PGP_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          PGP_SECRET: ${{ secrets.SIGNING_KEY }}
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          npm install
          npx semantic-release

  success:
    runs-on: ubuntu-latest
    needs:
      - check
      - test-release
      - release
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
